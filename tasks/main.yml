# tasks/main.yml
---
######## START: Get playbooks to run ########

- name: Create rhelAll fact fallback
  set_fact:
    ansible_distribution_combine: dummy

- name: Create rhelAll fact if needed when AlmaLinux, Rocky, RHEL
  set_fact:
    ansible_distribution_combine: rhelAll
  when: >
    ansible_distribution == "AlmaLinux" or
    ansible_distribution == "Rocky" or
    ansible_distribution == "RedHat" or
    ansible_distribution == "CentOS"

- name: fix ansible_python_interpreter, for Rocky and AlmaLinux, see lib/ansible/config/base.yml
  block:
  - name: rhelClone v9
    set_fact:
      ansible_python_interpreter: /usr/bin/python3
    when: ansible_distribution_major_version|int == 9
  - name: rhelClone v8
    set_fact:
      ansible_python_interpreter: /usr/libexec/platform-python
    when: ansible_distribution_major_version|int == 8
  - name: rhelClone v6
    set_fact:
      ansible_python_interpreter: /usr/bin/python
    when: ansible_distribution_major_version|int == 6
  when: >
    ansible_distribution == "AlmaLinux" or
    ansible_distribution == "Rocky"

- set_fact:
    include_file_names: []

- name: find role directory  (awx aware)
  find:
    paths: 
    - /runner/requirements_roles
    - "{{ lookup('env', 'PWD') }}/roles/{{role_path|basename}}/tasks"
    - "{{ lookup('env', 'HOME') }}/.ansible/roles{{role_path|basename}}/tasks"
    - "/usr/share/ansible/roles/{{role_path|basename}}/tasks"
    - "/etc/ansible/roles/{{role_path|basename}}/tasks"
    - "/runner/project/roles/{{role_path|basename}}/tasks"
    - "/runner/requirements_roles/{{role_path|basename}}/tasks"
    recurse: no
    depth: 1
    file_type: file 
    use_regex: no 
    patterns: main.yml
  delegate_to: localhost
  become: no
  run_once: True
  register: found_task_dirs
  no_log: True

- name: define tasks directory
  set_fact:
    "{{ 'task_dir_' + role_name|split('.')|last }}": "{{ found_task_dirs.files[0].path|dirname }}"

- name: find all task files with numeric pattern
  find:
    paths: "{{ vars['task_dir_' + role_name|split('.')|last] }}"
    recurse: yes 
    depth: 2 
    file_type: file 
    use_regex: yes 
    patterns: ['^[0-9]{2}_.*.yml$']
  delegate_to: localhost
  become: no
  run_once: True
  register: found_playbooks

- name: trim all playbook paths
  set_fact:
    include_file_names: "{{ include_file_names + [ plays.path | regex_replace('.*/', '') ] }}"
  loop: "{{ found_playbooks.files }}"
  loop_control:
    loop_var: plays
  no_log: True

- name: sort and uniq
  set_fact: 
    include_file_names: "{{ include_file_names | unique | sort }}"

######## END: Get playbooks to run ########


######## START: Execution part ########
- name: "include tasks"
  include_tasks: "include-file.yml"
  loop_control:
    loop_var: include_file_name 
  with_items:
    - "{{ include_file_names }}"
######## END: Execution part ########

